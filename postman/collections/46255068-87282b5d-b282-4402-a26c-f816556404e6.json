{
	"info": {
		"_postman_id": "46255068-87282b5d-b282-4402-a26c-f816556404e6",
		"name": "Final API POC - Muhammad Hassan Farooq",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET All Posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d899acc4-5149-4e9e-9f8f-048b1db9e884",
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is < 1000ms\", () => {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is correct\", () => {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "46255068-4e5f13d4-de70-499b-9916-9c295eb98682",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/posts",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Single Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8fd571cc-668c-4cd0-ab8a-eb8851bd6df4",
						"exec": [
							"let jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains expected fields\", () => {\r",
							"    pm.expect(jsonData).to.have.property(\"title\");\r",
							"    pm.expect(jsonData).to.have.property(\"body\");\r",
							"    pm.expect(jsonData).to.have.property(\"id\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is < 1000ms\", () => {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is correct\", () => {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "46255068-e70cf5f2-aa34-4453-b0af-e4e80606ff4d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/posts/{{postId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts",
						"{{postId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d52d7344-5077-4a42-8af2-d96b1ba82b89",
						"exec": [
							"let jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 201\", () => {\r",
							"    pm.expect(pm.response.code).to.eql(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains expected fields\", () => {\r",
							"    pm.expect(jsonData).to.have.property(\"title\");\r",
							"    pm.expect(jsonData).to.have.property(\"body\");\r",
							"    pm.expect(jsonData).to.have.property(\"userId\");\r",
							"    pm.expect(jsonData).to.have.property(\"id\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is < 1000ms\", () => {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is correct\", () => {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"pm.test(\"Post is created with correct body\", () => {\r",
							"    pm.expect(jsonData.title).to.eql(\"Testing\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "46255068-dc9625f2-e445-4cdf-b6d8-5824044cf534",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"userId\": 10,\r\n        \"title\": \"Testing\",\r\n        \"body\": \"Testing Body\",\r\n        \"id\": 101\r\n\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/posts",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2696f2d8-5023-4914-ad64-8ad4d713020c",
						"exec": [
							"let jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is < 1000ms\", () => {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is correct\", () => {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "87b1f20a-4432-496a-a29d-c54f0f487a57",
						"exec": [
							"pm.environment.set(\"timestamp\", Date.now());\r",
							"pm.environment.set(\"fakeToken\", \"abc123token\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "46255068-7f52c284-39fa-4373-9425-57c156c1cc46",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 1,\r\n  \"title\": \"Update Test {{timestamp}}\",\r\n  \"body\": \"Update body {{fakeToken}} \",\r\n  \"userId\": 10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/posts/{{postId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts",
						"{{postId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "337cd14a-b124-4db0-bde0-e2655ac4dc44",
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is < 1000ms\", () => {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is correct\", () => {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "46255068-0f9b5b47-7808-484e-88d5-e10c71c69cfb",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/posts/{{postId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"posts",
						"{{postId}}"
					]
				}
			},
			"response": []
		}
	]
}